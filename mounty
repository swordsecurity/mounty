#!/usr/bin/env bash
# mounty - mount all partitions from an image in the current directory using the ID from mmls
# Usage: mounty image.dd

# script is based on mountall.sh from Luc Gommans

if [ $# -lt 1 ]; then
    echo "Usage: mounty.sh [image]";
    exit 1;
fi;

img="$1";

# Find the block size using mmls
bs=$(mmls $img | grep sectors | tr -dc '0-9')
echo Detected block size $bs

# Iterate over each line and exclude non-mountable partitions / other info
mmls $img | grep -v 'Offset' | grep -v 'Units' | grep -v 'Unallocated' | grep -v 'Meta' | grep '[0-9]' | while read line; do

    # The directory is the device id
    dir=$(echo "$line" | awk '{print $1}' | tr -dc '0-9')

    start=$(echo "$line" | awk '{print $3}' | sed 's/^0*//')
    end=$(echo "$line" | awk '{print $4}' | sed 's/^0*//')
    
    sudo mkdir $dir 2>/dev/null #Redirect error if dir exists
    offset=$(($start*$bs)) # Calculate the offset to use

    # Show what we have found and calculated
    echo "id: $dir; sectors $start - $end; offset $offset; mounting readonly..."
    sudo mount -o ro,noexec,loop,offset=$offset $img $dir

    # If that didn't work, show that it didn't work.
    if [ $? -ne 0 ]; then
        echo "Trying mounting with norecovery $dir"
        sudo mount -o norecovery,ro,noexec,loop,offset=$offset $img $dir
        
        if [ $? -ne 0 ]; then
            echo "ERROR: Couldn't mount $dir"
        fi;
    fi;
done
